	这一章学习的是线程。首先学习如何创建线程，然后学习线程的中止，一个线程中止的时候如果没有其他线程等待（join）它，并且没有被设置为
DETACHED，那么这个线程所占用的内存将不会被释放，有出现内存泄露的风险。还有，也可已把这个线程结束时要进行的清理任务放到一个函数中，
作为pthread_cleanup_push()的参数，然后pthread_cleanup_pop带一个非零参数或者在上面有退出动作（如pthread_exit()），那么清理
函数将被执行，使得清理动作统一起来，以免遗漏某些清理。

	线程用起来电脑执行速度更快，但是带来的问题就是编程时比较麻烦，因为这么多线程功用一块内存区域，那么谁改变了某个变量，都是对其他线程
可见的，所以控制的不好可能对想要的结果有影响，这要求我们要灵活运用线程给我们提供的一些功能来控制线程的行为，使得线程的工作按照我们的
意愿执行。这就有了私有数据，互斥锁，条件变量，信号量。

	私有数据可以在每个新城中创建任意多个自己私有的全局变量，这种变量的改变只会影响自己这个线程的值，而对其他线程则不会有影响。

	互斥锁则是给某一段代码加锁，保证这一段代码的执行不会中断（中间不会有其他线程进来执行这同一段代码）。

	条件变量则是线程间共享一个全局变量，线程的某些行为要看这些条件变量的值来进行，符合条件就执行某个功能，不符合条件就一直等待或者按时
间等待。所以更改全局变量的值要加上一个互斥锁来保证同一时间只有一个线程更改。

	信号量就是一个控制流程的作用，某一个线程工作完了，通知其他等待的线程可以进来工作了。
